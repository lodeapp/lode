name: CI
on: [push, pull_request]
env:
  APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
  APPLE_ID: ${{ secrets.APPLE_ID }}
  CI: true
  CSC_KEY_PASSWORD: ${{ secrets.MACOSDEVELOPERCERTIFICATE_PASSWORD }}
  CSC_LINK: ${{ secrets.MACOSDEVELOPERCERTIFICATE_BASE64 }}
  FORCE_COLOR: 3
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test:
    name: Test and build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node-version: [14.x]
        os: [macOS-latest, windows-latest]
    steps:
    -
      uses: actions/checkout@v1
    -
      name: System info (macOS)
      if: matrix.os == 'macOS-latest'
      run: sw_vers
    -
      name: System info (Windows)
      if: matrix.os == 'windows-latest'
      run: systeminfo
    -
      name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    -
      name: Get Yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    -
      uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    -
      name: Install dependencies
      run: yarn --prefer-offline --network-timeout 100000
    -
      name: Lint styles
      run: yarn lint:styles src
    -
      name: Lint scripts
      run: yarn lint --quiet
    -
      name: Check Typescript
      run: yarn tsc
    -
      name: Unit test
      run: yarn test
    -
      name: Cypress test
      run: yarn test:e2e --record --key ${{ secrets.CYPRESS_RECORD_KEY }}
    -
      name: Save Cypress results
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: cypress-${{ matrix.os }}
        path: |
          tests/cypress/screenshots
          tests/cypress/videos
    -
      name: Build
      run: yarn build
    -
      name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.os }}
        path: build

  release:
    name: Release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: github.ref == 'refs/heads/main'
    needs: test
    strategy:
      matrix:
        node-version: [14.x]
        os: [macOS-latest, windows-latest]

    steps:
      -
        uses: actions/checkout@v1
      -
        name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      -
        name: Install dependencies
        run: yarn install
      -
        name: Release
        run: yarn release
