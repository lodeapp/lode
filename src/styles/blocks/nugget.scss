@use "sass:color";

.nugget {
    @include clearfix;

    position: relative;

    &:focus {
        outline: 0;
    }

    > .seam {
        display: none;
        height: 100%;
        left: 0;
        position: absolute;
        top: 0;
        width: var(--status-block-width);
        z-index: 2;

        &::before {
            border-right-style: solid;
            border-right-width: 2px;
            content: "";
            height: calc(100% - 16px);
            left: 13px;
            position: absolute;
            top: 0;
            width: 0;
        }

        &::after {
            background-color: var(--primary-background-color);
            border-radius: 100%;
            border-style: double;
            border-width: 4px;
            bottom: 14px;
            content: "";
            height: 2px;
            left: 9px;
            position: absolute;
            width: 2px;
        }
    }

    > .header {
        background-color: var(--primary-border-color);
        padding: 1px 0 0;
        padding-left: calc(var(--status-block-width) + var(--status-soft-border-width));
        position: relative;

        .status {
            border: 1px solid;
            height: 100%;
            left: 0;
            position: absolute;
            text-align: center;
            top: 0;
            width: var(--status-block-width);
            z-index: 3;

            &::after {
                color: var(--color-status-queued-up-3);
                content: "●";
                display: block;
                position: relative;
                top: calc(50% - .7rem);
                transform: scale(0);
                transition: transform 340ms cubic-bezier(.18, 1.4, .4, 1);
            }

            i {
                left: 0;
                position: relative;
                top: 5px;
            }
        }

        .header-inner {
            background-color: var(--primary-background-color);
            display: flex;
            min-height: 28px;
            padding: 5px;
            padding-right: var(--status-block-width);
        }

        .toggle {
            position: absolute;
            right: 8px;
            top: calc(50% - 8px);

            i {
                svg {
                    fill: var(--color-fg-subtler);
                }
            }
        }
    }

    > .nugget-items {
        background-color: var(--secondary-background-color);
        list-style: none;
        padding: 0 0 8px var(--status-block-width);
        position: relative;
        z-index: 1;

        > :last-child {
            &.is-collapsed {
                border-bottom: 1px solid var(--primary-border-color);
            }
        }
    }

    &.is-collapsed {
        > .header {
            .status {
                border-bottom-color: transparent !important;
            }
        }
    }

    &.is-expanded {
        > .seam {
            display: block;
        }

        > .nugget-items {
            > :nth-last-child(1) {
                &.nugget.is-expanded {
                    > .seam {
                        &::after {
                            bottom: 6px;
                        }
                    }

                    > .nugget-items {
                        padding-bottom: 0;
                    }
                }
            }
        }
    }

    &.status--running {
        > .header {
            .status {
                &::after {
                    transform: scale(1);
                }
            }
        }
    }

    &.status--passed {
        > .seam::before,
        > .seam::after {
            border-color: var(--color-status-passed);
        }

        > .header {
            .status {
                background-color: var(--color-status-passed);
                border-color: var(--color-status-passed-border);
                box-shadow: var(--status-soft-border-width) 0 0 0 var(--color-status-passed-down-2);
            }
        }
    }

    &.status--failed {
        > .seam::before,
        > .seam::after {
            border-color: var(--color-status-failed);
        }

        > .header {
            .status {
                background-color: var(--color-status-failed);
                border-color: var(--color-status-failed-border);
                box-shadow: var(--status-soft-border-width) 0 0 0 var(--color-status-failed-down-3);
            }
        }
    }

    &.status--incomplete,
    &.status--skipped {
        > .seam::before,
        > .seam::after {
            border-color: var(--color-status-incomplete);
        }

        > .header {
            .status {
                background-color: var(--color-status-incomplete);
                border-color: var(--color-status-incomplete-border);
                box-shadow: var(--status-soft-border-width) 0 0 0 var(--color-status-incomplete-down-2);
            }
        }
    }

    &.status--warning,
    &.status--missing {
        > .seam::before,
        > .seam::after {
            border-color: var(--color-status-warning);
        }

        > .header {
            .status {
                background-color: var(--color-status-warning);
                border-color: var(--color-status-warning-border);
                box-shadow: var(--status-soft-border-width) 0 0 0 var(--color-status-warning-down-2);

                i {
                    color: $white;
                }
            }
        }
    }

    &.status--partial {
        > .seam::before,
        > .seam::after {
            border-color: var(--color-status-partial);
        }

        > .header {
            .status {
                background:
                    repeating-linear-gradient(
                        -55deg,
                        var(--color-status-partial),
                        var(--color-status-partial) 3px,
                        var(--color-status-partial-up-1) 3px,
                        var(--color-status-partial-up-1) 6px
                    );
                border-color: var(--color-status-partial-border);
                box-shadow: var(--status-soft-border-width) 0 0 0 var(--color-status-partial-down-3);
            }
        }
    }

    &.status--empty {
        > .seam::before,
        > .seam::after {
            border-color: var(--color-status-idle);
        }

        > .header {
            .status {
                background-color: var(--color-status-idle-down-2);
                border-color: var(--color-status-idle);
                box-shadow: var(--status-soft-border-width) 0 0 0 var(--color-status-idle-down-2);

                &::before {
                    border-left: 1px solid var(--color-status-idle);
                    content: "";
                    display: block;
                    height: calc(100% + 10px);
                    left: 8px;
                    position: relative;
                    top: 2px;
                    transform: rotate(40deg);
                    width: 100%;
                }
            }
        }
    }

    &.status--queued,
    &.status--running {
        > .seam::before,
        > .seam::after {
            border-color: var(--color-status-queued);
        }

        > .header {
            .status {
                background-color: var(--color-status-queued);
                border-color: var(--color-status-queued-border);
                box-shadow: var(--status-soft-border-width) 0 0 0 var(--color-status-queued-down-1);
            }
        }
    }

    &.status--idle {
        > .seam::before,
        > .seam::after {
            border-color: var(--color-status-idle);
        }

        > .header {
            .status {
                background-color: var(--color-status-idle);
                border-color: var(--color-status-idle-border);
                box-shadow: var(--status-soft-border-width) 0 0 0 var(--color-status-idle-down-2);
            }
        }
    }

    &.status--error {
        > .seam::before,
        > .seam::after {
            border-color: var(--color-status-failed);
        }

        > .header {
            .status {
                background-color: var(--color-status-error);
                border-color: var(--color-status-error-border);
                box-shadow: var(--status-soft-border-width) 0 0 0 var(--color-status-error-down-2);

                i {
                    color: $white;
                }
            }
        }
    }

    &.is-active {
        > .header {
            background-color: var(--color-item-active-bg);

            > .header-inner {
                background-color: var(--color-item-active-bg);
                color: var(--color-item-active-fg);

                > .selective-toggle {
                    button {
                        border-color: var(--color-item-active-fg);
                    }
                }
            }
        }
    }

    &:focus-within,
    &.is-active,
    &.is-child-active {
        > .header {
            > .status {
                border-right-color: var(--color-status-selected);
                box-shadow: 4px 0 0 0 var(--color-scale-blue-3);
            }
        }
    }

    // Parent nuggets can only focused by keyboard navigation.
    // This distinguishes them from just having a child active.
    &.suite:focus,
    &.has-children:focus {
        > .header {
            > .header-inner {
                background-color: var(--color-status-selected-down-3);

                > .filename {
                    > .dir {
                        // Give a slight readability boost to discreet text.
                        color: var(--color-fg-subtle);
                    }
                }
            }
        }
    }
}
