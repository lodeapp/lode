name: CI
on: [push, pull_request]
env:
  APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
  APPLE_ID: ${{ secrets.APPLE_ID }}
  CI: true
  CSC_KEY_PASSWORD: ${{ secrets.MACOSDEVELOPERCERTIFICATE_PASSWORD }}
  CSC_LINK: ${{ secrets.MACOSDEVELOPERCERTIFICATE_BASE64 }}
  CSC_FOR_PULL_REQUEST: true
  CYPRESS_VERIFY_TIMEOUT: 100000
  FORCE_COLOR: 3
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test:
    name: Test and build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x]
        os: [macOS-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v3

      - name: System info (macOS)
        if: matrix.os == 'macOS-latest'
        run: sw_vers

      - name: System info (Windows)
        if: matrix.os == 'windows-latest'
        run: systeminfo

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory
        run: echo "yarn_dir=$(yarn cache dir)" >> $GITHUB_ENV

      - name: Get yarn cache directory (Windows)
        if: matrix.os == 'windows-latest'
        run: echo "yarn_dir=$(yarn cache dir)" >> $env:GITHUB_ENV

      - name: Cache yarn dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.yarn_dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn --prefer-offline --network-timeout 100000

      - name: Lint styles
        run: yarn lint:styles

      - name: Lint scripts
        run: yarn lint --quiet

      - name: Check Typescript
        run: yarn tsc

      - name: Unit test
        run: yarn test

      - name: Cypress test
        run: yarn test:e2e --record --key ${{ secrets.CYPRESS_RECORD_KEY }}

      - name: Save Cypress results
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: cypress-${{ matrix.os }}
          path: |
            tests/cypress/screenshots
            tests/cypress/videos

      - name: Build
        run: yarn build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}
          path: build

  release:
    name: Release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: github.ref == 'refs/heads/main'
    needs: test
    strategy:
      matrix:
        node-version: [16.x]
        os: [macOS-latest, windows-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --prefer-offline --network-timeout 100000

      - name: Release
        run: yarn release
